import os
import pypandoc
import streamlit as st

def generate_readme():
    st.markdown("""
        ### Explica√ß√£o:
        1. **Leitura e Convers√£o de HTML para Markdown**: O script l√™ o arquivo HTML de `site/reference/index.html` e o converte para Markdown utilizando a biblioteca `pypandoc`.
        2. **Adi√ß√£o de Cabe√ßalho e Estrutura**: Ap√≥s a convers√£o, ele adiciona um cabe√ßalho contendo informa√ß√µes sobre o projeto, como uma descri√ß√£o, navega√ß√£o e funcionalidades principais.
        3. **Gera√ß√£o do `README.md`**: O script combina o conte√∫do convertido com o cabe√ßalho e gera o arquivo `README.md`.
        4. **Verifica√ß√£o de Arquivo**: Caso o arquivo `index.html` n√£o seja encontrado, o script exibe uma mensagem de erro.

        ### Como Usar:
        1. Salve o c√≥digo em um arquivo chamado `generate_readme.py`.
        2. Execute o script:
        ```bash
        python generate_readme.py
    """)
    source_file = os.path.join("site", "reference", "index.html")
    output_file = "README.md"

    if not os.path.exists(source_file):
        print(f"‚ùå Arquivo n√£o encontrado: {source_file}")
        return

    try:
        print("üîÑ Convertendo HTML para Markdown...")
        # Converte o HTML em Markdown usando pypandoc
        markdown = pypandoc.convert_file(source_file, "md")

        # Adiciona uma estrutura de navega√ß√£o e informa√ß√µes adicionais ao Markdown
        header = """
# Projeto BlackOps - Docs

## Descri√ß√£o

O **Projeto BlackOps** √© uma iniciativa focada em ciberseguran√ßa e integra√ß√£o de tecnologias, incluindo automa√ß√£o, redes e interfaces inteligentes.

---

## Navega√ß√£o

* [In√≠cio](index.md)
* [Refer√™ncia](#referencia)
    * [Interface Streamlit](reference/ui/streamlit_interface.md)
    * [OCR RFID](reference/ai/ocr_rfid.md)
    * [Voice Control](reference/ai/voice_control.md)
    * [Relay Control](reference/core/relay_control.md)
    * [GitHub Utils](reference/core/github_utils.md)
    * [Port Scanner](reference/network/port_scanner.md)
    * [Firewall Checker](reference/network/firewall_checker.md)

---

## Funcionalidades

1. **Controle de Relay (GPIO):** Controle f√≠sico de relays para automa√ß√£o e testes de hardware.
2. **Verificador de Firewall e Portas:** Ferramenta para escaneamento de portas e verifica√ß√£o de regras de firewall.
3. **Reconhecimento de Voz:** Comandos de voz para intera√ß√£o com o sistema.
4. **OCR e Transmiss√£o de V√≠deo:** Captura de v√≠deo e reconhecimento de texto atrav√©s de OCR para interface interativa.

---

## Como Usar

1. Clone o reposit√≥rio:
   ```bash
   git clone https://github.com/seu-usuario/blackops.git
   cd blackops
"""
            # Combina o conte√∫do da convers√£o com o cabe√ßalho
        full_markdown = header + "\n" + markdown

        # Cria ou sobrescreve o README.md com o conte√∫do
        with open(output_file, "w", encoding="utf-8") as f:
            f.write(full_markdown)

        print(f"‚úÖ README.md gerado com sucesso em: {output_file}")

    except Exception as e:
        print(f"‚ùå Erro ao converter: {e}")
if __name__ == "__main__": generate_readme()